---
import { getAllPosts } from '../../components/lib/cosmic'
import Layout from '../../layouts/Layout.astro'
import PostBody from '../../components/blog/PostBody.tsx'
import { parseISO, format } from 'date-fns'
import Author from '../../components/blog/Author.astro'
import { getFeaturedPost } from '../../components/lib/cosmic'

interface Props {
  slug: string
  post: {
    slug: string
    title: string
    created_at: string
    metadata: {
      excerpt: string
      content: string
      cover_image?: {
        url: string
        imgix_url: string
      }
      author?: {
        title: string
        slug: string
        metadata: {
          avatar?: {
            url: string
            imgix_url: string
          }
          about?: string
          linkedin_link?: string
          twitter_link?: string
          github_link?: string
        }
      }
    }
  }
}

export async function getStaticPaths() {
  const data = (await getAllPosts()) || []

  return data.map((post: Props) => {
    return {
      params: { slug: post.slug },
      props: { post }
    }
  })
}

const { post } = Astro.props
const featuredPost = await getFeaturedPost()
---

<Layout
  title={post.title}
  description={post.metadata.excerpt}>
  <article class="flex flex-col items-center justify-center min-h-screen p-4">
    <section class="border-b pb-8 w-full max-w-2xl mx-auto">
      <h1 class="text-4xl font-bold text-center mb-4">
        {post.title}
      </h1>
      <div class="flex flex-col items-center gap-y-4 font-semibold">
        {
          post.metadata.author?.metadata.avatar && (
            <img
              src={`${post.metadata.author.metadata.avatar.imgix_url}?w=200&h=200&fit=crop&auto=compression,format`}
              width={50}
              height={50}
              class="rounded-full shadow-md"
              alt={post.metadata.author?.title}
            />
          )
        }
        <div class="text-center">
          {
            post.metadata.author?.title ? (
              <span class="block">{post.metadata.author?.title}</span>
            ) : (
              ''
            )
          }
          <span class="block">{format(parseISO(post.created_at), 'MM/dd/yyyy')}</span>
        </div>
      </div>
    </section>
    {
      post.metadata.cover_image && (
        <img
          src={`${post.metadata.cover_image?.imgix_url}?w=1200&auto=format,compression`}
          width={1200}
          height={675}
          alt={`Cover image for the blog ${post.title}`}
          class="my-12 rounded-md shadow-lg w-full max-w-3xl mx-auto"
          transition:name={
            post.title === featuredPost.title ? 'cover image' : 'void'
          }
          transition:persist
        />
      )
    }
    <div class="w-full max-w-3xl mx-auto">
      <PostBody content={post.metadata.content} />
    </div>
    {
      post.metadata?.author && (
        <section class="w-full max-w-2xl mx-auto mt-12">
          <Author
            name={post.metadata.author.title || 'the author'}
            imageUrl={
              `${post.metadata.author.metadata.avatar?.imgix_url}?w=200&h=200&fit=crop&auto=compression,format` ||
              ''
            }
            about={
              post.metadata.author.metadata.about ||
              "This author decided to remain anonymous. Whoever they are, I'm sure they love coffee. Everyone loves coffee..."
            }
            linkedIn={post.metadata.author?.metadata.linkedin_link || ''}
            twitter={post.metadata.author?.metadata.twitter_link || ''}
            gitHub={post.metadata.author?.metadata.github_link || ''}
          />
        </section>
      )
    }
  </article>

</Layout>